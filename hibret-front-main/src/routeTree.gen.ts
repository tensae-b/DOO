/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const RegisterLazyImport = createFileRoute('/register')()
const ProfileLazyImport = createFileRoute('/profile')()
const NotificationLazyImport = createFileRoute('/notification')()
const MyDocumentsLazyImport = createFileRoute('/my-documents')()
const LoginLazyImport = createFileRoute('/login')()
const DocumentsLazyImport = createFileRoute('/documents')()
const CreateUserLazyImport = createFileRoute('/create-user')()
const AdminworkflowLazyImport = createFileRoute('/adminworkflow')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const ProfileLazyRoute = ProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))

const NotificationLazyRoute = NotificationLazyImport.update({
  path: '/notification',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/notification.lazy').then((d) => d.Route))

const MyDocumentsLazyRoute = MyDocumentsLazyImport.update({
  path: '/my-documents',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/my-documents.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const DocumentsLazyRoute = DocumentsLazyImport.update({
  path: '/documents',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/documents.lazy').then((d) => d.Route))

const CreateUserLazyRoute = CreateUserLazyImport.update({
  path: '/create-user',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/create-user.lazy').then((d) => d.Route))

const AdminworkflowLazyRoute = AdminworkflowLazyImport.update({
  path: '/adminworkflow',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/adminworkflow.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/adminworkflow': {
      preLoaderRoute: typeof AdminworkflowLazyImport
      parentRoute: typeof rootRoute
    }
    '/create-user': {
      preLoaderRoute: typeof CreateUserLazyImport
      parentRoute: typeof rootRoute
    }
    '/documents': {
      preLoaderRoute: typeof DocumentsLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/my-documents': {
      preLoaderRoute: typeof MyDocumentsLazyImport
      parentRoute: typeof rootRoute
    }
    '/notification': {
      preLoaderRoute: typeof NotificationLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AboutLazyRoute,
  AdminworkflowLazyRoute,
  CreateUserLazyRoute,
  DocumentsLazyRoute,
  LoginLazyRoute,
  MyDocumentsLazyRoute,
  NotificationLazyRoute,
  ProfileLazyRoute,
  RegisterLazyRoute,
])

/* prettier-ignore-end */
